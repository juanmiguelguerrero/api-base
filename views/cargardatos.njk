{% extends "layout.njk" %}

{% block body %}



<div class="container">
	<div class="row">
		<div class="col-md-4">
			{% include "menu.njk" %}
		</div>
		<div class="col-md-1"></div>
		<div class="col-md-7">
			
			{% raw %}

			<div id="app" style="margin-top: 100px;">
				<h3 class="mb-5">Cargar datos en una colección</h3>
				<form @submit.prevent="submitForm">
					<div class="form-group">
						<label for="">Selecciona el proyecto</label>
						<select class="form-control mb-4" v-model="proyectoSeleccionado" @change="cargaColecciones()">
							<option value="">Seleccionar proyecto...</option>
							<option v-for="proyecto in proyectos" :key="proyecto.id" :value="proyecto.id">{{proyecto.name}}</option>
						</select>
					</div>
					<div class="form-group">
						<label for="">Selecciona la colección</label>
						<select class="form-control mb-4" v-model="coleccionSeleccionada" @change="cargarModelo()">
							<option value="">Seleccionar colección...</option>
							<option v-for="coleccion in colecciones" :key="coleccion.id" :value="coleccion.id">{{coleccion.name}}</option>
						</select>
					</div>
					<div class="form-group" v-for="(campo, key, index) in modelo">
						<label for="" style="text-transform: capitalize">{{ key }} ({{ campo.type }})</label>
						<input type="text" class="form-control" :key="index" :id="index" v-model="payload[key]">
					</div>
	
					<button type="submit" class="btn btn-success btn-lg mt-3">Guardar dartos en colección</button>
				</form>
			</div>

			{% endraw %}

		</div>
	</div>
</div>


<script>

	new Vue({
		el: '#app',
		data: {
			proyectos: [],
			colecciones: [],
			proyectoSeleccionado: "",
			coleccionSeleccionada: "",
			modelo: {},
			payload: {}
		},
		methods: {
			cargaColecciones() {
				if (this.proyectoSeleccionado) {
					let proyecto = this.proyectos.find(item => item.id === this.proyectoSeleccionado)
					// console.log(proyecto)
					this.colecciones = proyecto.collections
				}
			},

			cargarModelo() {
				if (this.coleccionSeleccionada) {
					let proyecto = this.proyectos.find(item => item.id === this.proyectoSeleccionado)
					let coleccion = proyecto.collections.find(item => item.id === this.coleccionSeleccionada).model
					this.modelo = JSON.parse(coleccion)
					console.log(this.modelo)
				}
				// if (this.coleccionSeleccionada) {
				// 	axios.get('/api/colecciones/' + this.proyectoSeleccionado)
				// 		.then((response) => {
				// 			console.log(response)
				// 			//this.model = response.data.collection.model);
				// 			// this.model = coleccion[0].model
				// 			let proyecto = this.proyectos.filter(item => item.id === this.proyectoSeleccionado)
				// 			this.colecciones = proyecto[0].collections
				// 		})
				// }
			},

			submitForm() {

				let axiosConfig = {
					url: '/api/cargardatos',
					data: { proyectoId: this.proyectoSeleccionado, 
							coleccionId: this.coleccionSeleccionada,
							payload: this.payload },
					options: { headers: { 'content-type': 'application/json' } }
				}

				axios.post(axiosConfig.url, axiosConfig.data, axiosConfig.options)
					.then( response => alert('Se ha guardado el dato'))
					.catch( err => alert('Error al guardar dato'))
			}
		},
		mounted() {
			axios.get('/api/proyectos').then(response => this.proyectos = response.data.projects);
		}
	})
</script>


{% endblock %}